// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @db.Uuid
  name      String?  @db.VarChar(255)
  email     String   @unique @db.VarChar(255)
  password  String   @db.VarChar(100)
  createdAt DateTime @default(now())

  @@map("users")
}

model Tower {
  id          String       @id @db.Uuid
  code        Int          @db.Integer
  tower       String       @db.VarChar(20)
  type        String       @db.VarChar(20)
  coordinates Json         @db.Json
  distance    Float?       @db.DoublePrecision
  height      Float?       @db.DoublePrecision
  weight      Float?       @db.DoublePrecision
  embargo     String?      @db.VarChar(20)
  createdAt   DateTime     @default(now())
  foundations Foundation[]
  productions Production[]

  @@map("towers")
}

model Foundation {
  id                String   @id @db.Uuid
  project           String   @db.VarChar(255)
  revision          String   @db.VarChar(10)
  description       String   @unique
  excavation_volume Float?   @db.DoublePrecision
  concrete_volume   Float?   @db.DoublePrecision
  backfill_volume   Float?   @db.DoublePrecision
  steel_volume      Float?   @db.DoublePrecision
  createdAt         DateTime @default(now())

  towers Tower[]

  @@map("foundations")
}

model Task {
  id        String   @id @db.Uuid
  code      Int      @db.Integer
  stage     String   @db.VarChar(50)
  group     String   @db.VarChar(255)
  name      String   @db.VarChar(255)
  unit      String   @db.VarChar(20)
  createdAt DateTime @default(now())

  production Production?

  @@map("tasks")
}

model Team {
  id        String   @id @db.Uuid
  name      String   @unique
  createdAt DateTime @default(now())

  employees  Employee[]
  equipments Equipment[]
  production Production[]

  @@map("teams")
}

model Equipment {
  id           String           @id @db.Uuid
  registration String           @db.VarChar(255)
  model        String
  manufacturer String
  licensePlate String           @unique
  provider     String
  status       STATUS_EQUIPMENT @default(ACTIVE)
  createdAt    DateTime         @default(now())

  team   Team?   @relation(fields: [teamId], references: [id])
  teamId String? @db.Uuid

  @@map("equipments")
}

model Employee {
  id           String          @id @db.Uuid
  registration String          @db.VarChar(255)
  fullName     String          @unique @db.VarChar(255)
  occupation   String          @db.VarChar(255)
  leadership   Boolean         @db.Boolean
  status       STATUS_EMPLOYEE @default(ACTIVE)
  createdAt    DateTime        @default(now())
  team         Team?           @relation(fields: [teamId], references: [id])
  teamId       String?         @db.Uuid

  @@map("employees")
}

model Production {
  id        String            @id @db.Uuid
  status    STATUS_PRODUCTION @default(EXECUTED)
  comments  String?
  startTime DateTime?
  finalTime DateTime?
  createdAt DateTime          @default(now())
  //weather  WEATHER           @default(BOM)

  task   Task   @relation(fields: [taskId], references: [id])
  taskId String @unique @db.Uuid

  towers Tower[]
  teams  Team[]

  @@map("productions")
}

enum STATUS_EQUIPMENT {
  ACTIVE
  MAINTENANCE
  DEMOBILIZED
}

enum STATUS_PRODUCTION {
  EXECUTED
  PROGRAMMED
  PROGRESS
}

enum STATUS_EMPLOYEE {
  ACTIVE
  AWAY
}

enum LEADERS {
  YES
  NO
}
