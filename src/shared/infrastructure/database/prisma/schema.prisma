// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @db.Uuid
  name      String?  @db.VarChar(255)
  email     String   @unique @db.VarChar(255)
  password  String   @db.VarChar(100)
  createdAt DateTime @default(now())

  @@map("users")
}

model Tower {
  id                    String   @id @db.Uuid
  code                  Int      @db.Integer
  tower                 String   @db.VarChar(20)
  type                  String   @db.VarChar(20)
  coordinates           Json     @db.Json
  distance              Float?   @db.DoublePrecision
  height                Float?   @db.DoublePrecision
  weight                Float?   @db.DoublePrecision
  type_of_foundation_A  String?  @db.VarChar(20)
  type_of_foundation_B  String?  @db.VarChar(20)
  type_of_foundation_C  String?  @db.VarChar(20)
  type_of_foundation_D  String?  @db.VarChar(20)
  type_of_foundation_MC String?  @db.VarChar(20)
  embargo               String?  @db.VarChar(20)
  createdAt             DateTime @default(now())

  @@map("towers")
}

model Task {
  id        String   @id @db.Uuid
  code      Int      @db.Integer
  stage     String   @db.VarChar(50)
  group     String   @db.VarChar(255)
  name      String   @db.VarChar(255)
  unit      String   @db.VarChar(20)
  createdAt DateTime @default(now())

  @@map("tasks")
}

model Team {
  id        String   @id @db.Uuid
  name      String   @unique
  createdAt DateTime @default(now())

  employee  Employee[]
  equipment Equipment[]

  // production Production[]
  @@map("teams")
}

model Equipment {
  id           String @id @db.Uuid
  registration String @db.VarChar(255)
  model        String
  manufacturer String
  licensePlate String @unique
  provider     String

  status    STATUS_EQUIPMENT @default(ACTIVE)
  createdAt DateTime         @default(now())

  team   Team?   @relation(fields: [teamId], references: [id])
  teamId String? @db.Uuid

  @@unique([teamId])
  @@map("equipments")
}

model Employee {
  id           String          @id @db.Uuid
  registration String          @db.VarChar(255)
  fullName     String          @unique @db.VarChar(255)
  occupation   String          @db.VarChar(255)
  leadership   Boolean         @db.Boolean
  status       STATUS_EMPLOYEE @default(ACTIVE)
  createdAt    DateTime        @default(now())

  team   Team?   @relation(fields: [teamId], references: [id])
  teamId String? @db.Uuid

  @@unique([teamId])
  @@map("employees")
}

// model Production {
//   id Int @id @default(autoincrement())

//   comments String?
//   status   STATUS_PRODUCTION @default(PROGRAMADO)
//   weather  WEATHER           @default(BOM)
//   task     Task              @relation(fields: [taskId], references: [id])
//   taskId   Int

//   tower  ListConstruction @relation(fields: [listId], references: [id])
//   listId Int

//   team   Team @relation(fields: [teamId], references: [id])
//   teamId Int

//   productionDate DateTime

//   startTimeOfDay String?
//   endTimeOfDay   String?
// }

enum STATUS_EQUIPMENT {
  ACTIVE
  MAINTENANCE
  DEMOBILIZED
}

enum STATUS_PRODUCTION {
  EXECUTADO
  PROGRAMADO
  ANDAMENTO
}

enum STATUS_EMPLOYEE {
  ACTIVE
  AWAY
}

enum LEADERS {
  YES
  NO
}
